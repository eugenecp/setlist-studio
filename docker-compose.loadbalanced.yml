version: '3.8'

# Load Balanced Docker Compose Configuration for Setlist Studio
# Provides NGINX load balancing with multiple app instances and Redis for session storage
# Use with: docker-compose -f docker-compose.yml -f docker-compose.loadbalanced.yml up

services:
  # Redis for distributed session storage and caching
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-setlist-redis-dev-password}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis-data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - setlist-backend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PostgreSQL Database for production scalability
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=setliststudio
      - POSTGRES_USER=setlist_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-setlist-postgres-dev-password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
      - PGDATA=/var/lib/postgresql/data/pgdata
      # Performance tuning for load balancing
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=200
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
      - POSTGRES_WORK_MEM=4MB
      - POSTGRES_MAINTENANCE_WORK_MEM=64MB
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./docker/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./docker/postgres/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - setlist-backend
    ports:
      - "5432:5432"  # Exposed for development/debugging (remove in production)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U setlist_user -d setliststudio"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    labels:
      - "com.setliststudio.service=database"
      - "com.setliststudio.component=postgresql"
      - "com.setliststudio.environment=${ASPNETCORE_ENVIRONMENT:-Development}"

  # NGINX Load Balancer
  nginx-lb:
    image: nginx:1.25-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/setlist-studio-locations.conf:/etc/nginx/conf.d/setlist-studio-locations.conf:ro
      - nginx-logs:/var/log/nginx
      - nginx-ssl:/etc/nginx/ssl:ro
      # Static content caching
      - nginx-cache:/var/cache/nginx
    networks:
      - setlist-frontend
      - setlist-backend
    depends_on:
      setliststudio-web-1:
        condition: service_healthy
      setliststudio-web-2:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    labels:
      - "com.setliststudio.service=load-balancer"
      - "com.setliststudio.environment=${ASPNETCORE_ENVIRONMENT:-Development}"

  # Primary Application Instance
  setliststudio-web-1:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=setliststudio;Username=setlist_user;Password=${POSTGRES_PASSWORD:-setlist-postgres-dev-password};Pooling=true;MinPoolSize=5;MaxPoolSize=50;CommandTimeout=30;
      - ConnectionStrings__Redis=redis:6379,password=${REDIS_PASSWORD:-setlist-redis-dev-password}
      # OAuth Configuration
      - Authentication__Google__ClientId=${GOOGLE_CLIENT_ID:-}
      - Authentication__Google__ClientSecret=${GOOGLE_CLIENT_SECRET:-}
      - Authentication__Microsoft__ClientId=${MICROSOFT_CLIENT_ID:-}
      - Authentication__Microsoft__ClientSecret=${MICROSOFT_CLIENT_SECRET:-}
      - Authentication__Facebook__AppId=${FACEBOOK_APP_ID:-}
      - Authentication__Facebook__AppSecret=${FACEBOOK_APP_SECRET:-}
      # Load balancing configuration
      - LoadBalancing__InstanceId=web-1
      - LoadBalancing__InstanceName=Setlist Studio Web 1
      - LoadBalancing__IsLoadBalanced=true
      # Session configuration for load balancing
      - Session__Provider=Redis
      - Session__RedisConnection=${REDIS_PASSWORD:-setlist-redis-dev-password}
      # Database provider configuration
      - Database__Provider=PostgreSQL
      - Database__MaxPoolSize=50
      - Database__MinPoolSize=5
      - Database__CommandTimeout=30
      - Database__ConnectionTimeout=15
    volumes:
      - setliststudio-web-1-logs:/app/logs
      - /tmp:/tmp:rw,nosuid,nodev,noexec
    tmpfs:
      - /app/temp:rw,nosuid,nodev,noexec,size=100m
    networks:
      - setlist-backend
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health/simple"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    labels:
      - "com.setliststudio.service=web-app"
      - "com.setliststudio.instance=1"
      - "com.setliststudio.environment=${ASPNETCORE_ENVIRONMENT:-Development}"

  # Secondary Application Instance
  setliststudio-web-2:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=setliststudio;Username=setlist_user;Password=${POSTGRES_PASSWORD:-setlist-postgres-dev-password};Pooling=true;MinPoolSize=5;MaxPoolSize=50;CommandTimeout=30;
      - ConnectionStrings__Redis=redis:6379,password=${REDIS_PASSWORD:-setlist-redis-dev-password}
      # OAuth Configuration
      - Authentication__Google__ClientId=${GOOGLE_CLIENT_ID:-}
      - Authentication__Google__ClientSecret=${GOOGLE_CLIENT_SECRET:-}
      - Authentication__Microsoft__ClientId=${MICROSOFT_CLIENT_ID:-}
      - Authentication__Microsoft__ClientSecret=${MICROSOFT_CLIENT_SECRET:-}
      - Authentication__Facebook__AppId=${FACEBOOK_APP_ID:-}
      - Authentication__Facebook__AppSecret=${FACEBOOK_APP_SECRET:-}
      # Load balancing configuration
      - LoadBalancing__InstanceId=web-2
      - LoadBalancing__InstanceName=Setlist Studio Web 2
      - LoadBalancing__IsLoadBalanced=true
      # Session configuration for load balancing
      - Session__Provider=Redis
      - Session__RedisConnection=${REDIS_PASSWORD:-setlist-redis-dev-password}
      # Database provider configuration
      - Database__Provider=PostgreSQL
      - Database__MaxPoolSize=50
      - Database__MinPoolSize=5
      - Database__CommandTimeout=30
      - Database__ConnectionTimeout=15
    volumes:
      - setliststudio-web-2-logs:/app/logs
      - /tmp:/tmp:rw,nosuid,nodev,noexec
    tmpfs:
      - /app/temp:rw,nosuid,nodev,noexec,size=100m
    networks:
      - setlist-backend
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health/simple"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    labels:
      - "com.setliststudio.service=web-app"
      - "com.setliststudio.instance=2"
      - "com.setliststudio.environment=${ASPNETCORE_ENVIRONMENT:-Development}"

  # Third Application Instance (Backup/Overflow)
  setliststudio-web-3:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=setliststudio;Username=setlist_user;Password=${POSTGRES_PASSWORD:-setlist-postgres-dev-password};Pooling=true;MinPoolSize=5;MaxPoolSize=50;CommandTimeout=30;
      - ConnectionStrings__Redis=redis:6379,password=${REDIS_PASSWORD:-setlist-redis-dev-password}
      # OAuth Configuration
      - Authentication__Google__ClientId=${GOOGLE_CLIENT_ID:-}
      - Authentication__Google__ClientSecret=${GOOGLE_CLIENT_SECRET:-}
      - Authentication__Microsoft__ClientId=${MICROSOFT_CLIENT_ID:-}
      - Authentication__Microsoft__ClientSecret=${MICROSOFT_CLIENT_SECRET:-}
      - Authentication__Facebook__AppId=${FACEBOOK_APP_ID:-}
      - Authentication__Facebook__AppSecret=${FACEBOOK_APP_SECRET:-}
      # Load balancing configuration
      - LoadBalancing__InstanceId=web-3
      - LoadBalancing__InstanceName=Setlist Studio Web 3 (Backup)
      - LoadBalancing__IsLoadBalanced=true
      # Session configuration for load balancing
      - Session__Provider=Redis
      - Session__RedisConnection=${REDIS_PASSWORD:-setlist-redis-dev-password}
      # Database provider configuration
      - Database__Provider=PostgreSQL
      - Database__MaxPoolSize=50
      - Database__MinPoolSize=5
      - Database__CommandTimeout=30
      - Database__ConnectionTimeout=15
    volumes:
      - setliststudio-web-3-logs:/app/logs
      - /tmp:/tmp:rw,nosuid,nodev,noexec
    tmpfs:
      - /app/temp:rw,nosuid,nodev,noexec,size=100m
    networks:
      - setlist-backend
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health/simple"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    labels:
      - "com.setliststudio.service=web-app"
      - "com.setliststudio.instance=3"
      - "com.setliststudio.backup=true"
      - "com.setliststudio.environment=${ASPNETCORE_ENVIRONMENT:-Development}"

  # Prometheus for metrics collection (optional monitoring)
  prometheus:
    image: prom/prometheus:v2.47.0
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - setlist-backend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "com.setliststudio.service=monitoring"

  # Grafana for dashboards (optional monitoring)
  grafana:
    image: grafana/grafana:10.1.0
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-setlist-grafana-dev}
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - setlist-backend
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "com.setliststudio.service=monitoring"

networks:
  setlist-frontend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
  setlist-backend:
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 172.31.0.0/16

volumes:
  # PostgreSQL data persistence
  postgres-data:
    driver: local
  
  # Individual log volumes per instance
  setliststudio-web-1-logs:
    driver: local
  setliststudio-web-2-logs:
    driver: local
  setliststudio-web-3-logs:
    driver: local
  
  # Redis data persistence
  redis-data:
    driver: local
  
  # NGINX volumes
  nginx-logs:
    driver: local
  nginx-ssl:
    driver: local
  nginx-cache:
    driver: local
  
  # Monitoring volumes
  prometheus-data:
    driver: local
  grafana-data:
    driver: local