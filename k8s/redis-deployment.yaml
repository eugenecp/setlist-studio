# Redis Deployment for Setlist Studio Load Balancing
# Provides distributed session storage and SignalR backplane

apiVersion: apps/v1
kind: Deployment
metadata:
  name: setlist-studio-redis
  namespace: setlist-studio
  labels:
    app: setlist-studio-redis
    component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: setlist-studio-redis
  template:
    metadata:
      labels:
        app: setlist-studio-redis
        component: cache
    spec:
      serviceAccountName: setlist-studio-redis-sa
      automountServiceAccountToken: false
      containers:
      - name: redis
        image: redis:7.2.4-alpine
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: setlist-studio-secrets
              key: redis-password
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --maxmemory
        - 256mb
        - --maxmemory-policy
        - allkeys-lru
        - --save
        - "900 1"
        - --save
        - "300 10"
        - --save
        - "60 10000"
        - --appendonly
        - "yes"
        - --appendfsync
        - everysec
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "2Gi"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 999
          runAsGroup: 999
          capabilities:
            drop:
            - ALL
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: setlist-studio-redis-pvc
      - name: redis-config
        configMap:
          name: redis-config
          defaultMode: 0444
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: setlist-studio-redis-service
  namespace: setlist-studio
  labels:
    app: setlist-studio-redis
    component: cache
spec:
  selector:
    app: setlist-studio-redis
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: setlist-studio-redis-sa
  namespace: setlist-studio
  labels:
    app: setlist-studio-redis
automountServiceAccountToken: false