# NGINX Ingress Controller for Setlist Studio Load Balancing
# Provides external load balancing with SSL termination and sticky sessions

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: setlist-studio-ingress
  namespace: setlist-studio
  labels:
    app: setlist-studio
  annotations:
    # NGINX Controller Annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    
    # Load Balancing Configuration
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    
    # Session Affinity for Blazor Server SignalR connections
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-name: "setlist-studio-affinity"
    nginx.ingress.kubernetes.io/session-cookie-expires: "3600"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "3600"
    nginx.ingress.kubernetes.io/session-cookie-path: "/"
    nginx.ingress.kubernetes.io/session-cookie-change-on-failure: "true"
    
    # SSL Configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Permissions-Policy: geolocation=(), microphone=(), camera=()";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-rpm: "100"
    
    # Proxy Configuration for Blazor Server
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    
    # WebSocket Support for SignalR
    nginx.ingress.kubernetes.io/proxy-set-headers: |
      X-Forwarded-For $proxy_add_x_forwarded_for;
      X-Forwarded-Proto $scheme;
      X-Real-IP $remote_addr;
      Host $host;
    
    # Custom NGINX Configuration for SignalR
    nginx.ingress.kubernetes.io/server-snippet: |
      location /_blazor/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Blazor-Connection-Id $http_x_blazor_connection_id;
        proxy_buffering off;
        proxy_request_buffering off;
      }
    
spec:
  tls:
  - hosts:
    - setliststudio.com
    - www.setliststudio.com
    secretName: setlist-studio-tls
  rules:
  - host: setliststudio.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: setlist-studio-web-service
            port:
              number: 80
  - host: www.setliststudio.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: setlist-studio-web-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: setlist-studio-network-policy
  namespace: setlist-studio
spec:
  podSelector:
    matchLabels:
      app: setlist-studio-web
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: setlist-studio-redis
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: setlist-studio-redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []  # Allow all external egress for OAuth and external APIs
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
    - protocol: UDP
      port: 53